name: Deploy eshop

on:
  workflow_dispatch:
  push:
    branches: ["master"]

jobs:
  Install:
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v2.5.0
        with:
          token: ${{ secrets.WORKFLOW_TOKEN}}


      - name: Setupp NodeJS
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 10
      
      - name: Cache node modules
        uses: actions/cache@v3.0.11
        with: 
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json')}}
          restore-keys: node_modules-

      - name: Install packages with npm
        run: |
          npm ci
  
  Build:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v2.5.0
        with:
          token: ${{ secrets.WORKFLOW_TOKEN}}


      - name: Setupp NodeJS
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 10
      
      - name: Cache node modules
        uses: actions/cache@v3.0.11
        with: 
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json')}}
      - name: Build
        run: |
          npm rebuild node-sass --force
          npm run build -- --colors
      - name: Cache node modules and build folder
        if: ${{ github.ref == 'refs/heads/master'}}
        uses: actions/cache@v3.0.11
        with:
          path: |
            ~/.npm
            ./node_modules
            ./build
          key: ${{ runner.os }}-build-${{ github.run_id }}
          restory-keys: ${{ runner.os }}-build-${{ github.run_id }}
  Test:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v2.5.0
        with:
          token: ${{ secrets.WORKFLOW_TOKEN}}


      - name: Setupp NodeJS
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 10
      
      - name: Cache node modules
        uses: actions/cache@v3.0.11
        with: 
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json')}}
      - name: Run tests
        run: |
          npm rebuild node-sass --force
          npm run test -- --colors

  Deploy:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Code checkout
        uses: actions/checkout@v2.5.0
        with:
          token: ${{ secrets.WORKFLOW_TOKEN}}

      - name: prepare credentials to my VM
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > key1.pem
          chmod 400 key1.pem
          echo "${{ secrets.VAULT_PASSWORD }}" > vault_pass

      - name: Run playbook
        run: |
          rsync -avvve "ssh -oStrictHostKeyChecking=no -i key1.pem" ./* ec2-user@ec2-3-92-2-159.compute-1.amazonaws.com:/home/ec2-user/4it572_ansible/
          ssh -i "key1.pem" ec2-user@ec2-3-92-2-159.compute-1.amazonaws.com "ansible-playbook /home/ec2-user/4it572_ansible/ansible/ec2_deploy.yml --vault-password-file /home/ec2-user/4it572_ansible/vault_pass  --user ec2-user --key-file ../key1.pem"

